// 简单题，matrix的二分查找

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length, n = matrix[0].length;
        int lo = 0, hi = (m-1)*n + n-1;
        while (lo <= hi) {
            int mid = lo + (hi-lo)/2;
            int row = mid/n, col = mid%n;
            if (matrix[row][col] == target) {
                return true;
            } else if (matrix[row][col] < target) {
                lo = mid + 1;
            } else {
                hi = mid - 1;
            }
        }
        return false;
    }
}

/*
0,1,2,3
4,5,6,7
8,9,10,11

m = 3

row, col

特别注意这里是row * n，n是多少个col，而不是row * m
index = row * n + col

*/