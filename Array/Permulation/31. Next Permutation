// Facebook 常考
// 这一题，属于耐心找规律，还是可以做出来的。可能是因为以前做过，大概知道。这道题给人的启发就是，有时候，可能先想想，如果是人手动来做，会怎么做，然后用电脑用同样的方法做就行了。但是有一些另外的题目，却需要用电脑的思维来思考，用人的思维反而会陷入困局。

// 这道题的关键在于找方法，好像这道题应用到了后面某一道题上面。
// 如果是让手动的找，如何找？从右往左，看是不是越来越大，找到第一个打破这个从右往左越来越大规律的数字，然后再从右往左找，找到比该数字刚好大的数字。因为我们已经知道了在这个数字的右边，是从右往左越来越大的，所以找到第一个比它大的就行了。swap两个数字。
// swap 以后，把后半部分倒过来，因为之前是从右往左越来越大，现在要改成越来越小才是最小的，也就是下一个permutation。
// 这里有一些特例，最典型的就是已经是3，2，1这样排列了。剩下的，我暂时没想到。可能类似1，2，3，交换2，3，就行了，程序应该可以handle这种。所有数字都相等，应该跟3,2,1 顺序排列是一样的处理方法。全部倒转一遍。

class Solution {
    public void nextPermutation(int[] nums) {
        if (nums == null || nums.length < 2) {
            return; 
        }
        int i = nums.length - 2;
        while (i >= 0 && nums[i] >= nums[i+1]) {
            i--;
        }
        if (i >= 0) {
            int j = nums.length - 1;
            while (j >= 0 && nums[j] <= nums[i]) {
                j--;
            }
            swap(nums, i, j);
        }
        int lo = i+1, hi = nums.length - 1;
        while (lo < hi) {
            swap(nums, lo++, hi--);
        }
    }
    
    private void swap (int[] nums, int lo, int hi) {
        int temp = nums[lo];
        nums[lo] = nums[hi];
        nums[hi] = temp;
    }
}

/*

1,2,5,3,6,7,4
1,2,5,3,7,4,6

1,2,6,5,3,7,4

*/
