/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        // termination condition
        if (head == null || head.next == null) {
            return head;
        }
        
        // split
        ListNode slow = head, fast = head;
        while (fast != null && fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode nextHead = slow.next;
        // avoid cycle
        slow.next = null;
        
        ListNode head1 = sortList(head), head2 = sortList(nextHead);
        
        // merge
        ListNode dummyHead = new ListNode();
        head = dummyHead;
        while (head1 != null && head2 != null) {
            if (head1.val < head2.val) {
                head.next = head1;
                head1 = head1.next;
            } else {
                head.next = head2;
                head2 = head2.next;
            }
            head = head.next;
        }
        if (head1 == null) {
            head.next = head2;
        } else {
            head.next = head1;
        }
        return dummyHead.next;
    }
}